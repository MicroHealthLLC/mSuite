- content_for :title
  | New #{@mindmap.mm_type == 'simple' ? 'Mind map' : @mindmap.mm_type.gsub('_', ' ').capitalize}

.mw_10
  #map_dashboard

= javascript_tag nonce: true do
  |Vue.prototype.$google_recaptcha_site_key = "#{Setting.first.google_recaptcha_site_key}"
    Vue.prototype.$beta_status = "#{Setting.first.beta_status}"
    Vue.prototype.$beta_url = "#{Setting.first.beta_url}"

= javascript_pack_tag "map_dashboard", async: true
= stylesheet_pack_tag "map_dashboard"

link href="/manifest.json" rel="manifest"

javascript:
  var vapidPublicKey = new Uint8Array(#{Base64.urlsafe_decode64('BFwPmA2G1nurT2sKMlZm0v-IAB_1KhdtoTrWfLq9cjAyoflZeujz4hqscO4tC-JKuVO2UARSpY5IbVxMDqaxSWE=').bytes});
  checkNotifs()
  function checkNotifs(obj){

    if (!("Notification" in window)) {
      console.error("This browser does not support desktop notification");
    }
    else if (Notification.permission === "granted") {
      console.log("Permission to receive notifications has been granted");
      getKeys();
    }
    else if (Notification.permission !== 'denied') {
      Notification.requestPermission(function (permission) {
        if (permission === "granted") {
          console.log("Permission to receive notifications has been granted");
          getKeys();
       }
      });
    }
  }

  function getKeys(){
    navigator.serviceWorker.register('/serviceworker.js', {scope: '/'})
    .then(function(registration) {
      return registration.pushManager.getSubscription()
      .then(function(subscription) {
        if (subscription) {
          return subscription;
        }
        return registration.pushManager.subscribe({
          userVisibleOnly: true,
          applicationServerKey: vapidPublicKey
        });
      });
    })
    .then(function(subscription) {
      sendKeys(subscription.toJSON())                                           //7
    });
  }

  function sendKeys(subscription){
    $.post('/msuite/sendkeys', {
      subscription: subscription,
      message: 'Sending subscription'
     });
  }
